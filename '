import React, {useContext, useState, useEffect} from 'react'
import {StoreContext} from './App'
import {useParams} from 'react-router-dom'
import {getRepoByUsername} from '../state/actions/index'

const Respository = () => {
    const { username, repo_name } = useParams();
    const [repo, setRepo] = useState(null)
    const {state, dispatch} = useContext(StoreContext)

    useEffect( ()=> {
        getRepoByUsername(username, repo_name)(dispatch)

    
    },[])

    useEffect( () => {
    let a = Object.values(state.entities.repositories)
        a.forEach( el => {
            if (el.owner === username) {
                setRepo(el)
            }
        } )
        console.log(repo)
    } )

    return (
        <div className='repository'>
            { repo &&  
                    (<div className='repo-container'> 
                        <div className='repo-info'> 
                            <div className="repo-info-name">Name:
                                <div> {repo.name} </div>
                            </div>

                            <div className='repo-info-description'>Description:
                                <div> {repo.description} </div>
                            </div>

                            <div className='repo-body'> </div>

                        </div> 
                <div>
            <div class="Box-row">
              <h3>…or create a new repository on the command line</h3>

              <div class="copyable-terminal">
                <div class="copyable-terminal-button">
                  <clipboard-copy for="empty-setup-new-repo-echo" aria-label="Copy to clipboard" class="btn btn-sm zeroclipboard-button" data-ga-click="Empty repo, click, Clicked copy new repo commands" tabindex="0" role="button">
                    <svg class="octicon octicon-clippy" viewBox="0 0 14 16" version="1.1" width="14" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M2 13h4v1H2v-1zm5-6H2v1h5V7zm2 3V8l-3 3 3 3v-2h5v-2H9zM4.5 9H2v1h2.5V9zM2 12h2.5v-1H2v1zm9 1h1v2c-.02.28-.11.52-.3.7-.19.18-.42.28-.7.3H1c-.55 0-1-.45-1-1V4c0-.55.45-1 1-1h3c0-1.11.89-2 2-2 1.11 0 2 .89 2 2h3c.55 0 1 .45 1 1v5h-1V6H1v9h10v-2zM2 5h8c0-.55-.45-1-1-1H8c-.55 0-1-.45-1-1s-.45-1-1-1-1 .45-1 1-.45 1-1 1H3c-.55 0-1 .45-1 1z"></path></svg>
                  </clipboard-copy>
                </div>
                <pre id="empty-setup-new-repo-echo" class="f5"><span class="user-select-contain">echo "# test" &gt;&gt; README.md</span>
<span class="user-select-contain">git init</span>
<span class="user-select-contain">git add README.md</span>
<span class="user-select-contain">git commit -m "first commit"</span>
<span class="user-select-contain">git remote add origin <span class="js-git-clone-help-text">https://github.com/arrudaricardo/test.git</span></span>
<span class="user-select-contain mb-0">git push -u origin master</span>
</pre>
              </div>
            </div>

            <div class="Box-row">
              <h3>…or push an existing repository from the command line</h3>

              <div class="copyable-terminal">
                <div class="copyable-terminal-button">
                  <clipboard-copy for="empty-setup-push-repo-echo" aria-label="Copy to clipboard" class="btn btn-sm zeroclipboard-button" data-ga-click="Empty repo, click, Clicked copy existing repo commands" tabindex="0" role="button">
                    <svg class="octicon octicon-clippy" viewBox="0 0 14 16" version="1.1" width="14" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M2 13h4v1H2v-1zm5-6H2v1h5V7zm2 3V8l-3 3 3 3v-2h5v-2H9zM4.5 9H2v1h2.5V9zM2 12h2.5v-1H2v1zm9 1h1v2c-.02.28-.11.52-.3.7-.19.18-.42.28-.7.3H1c-.55 0-1-.45-1-1V4c0-.55.45-1 1-1h3c0-1.11.89-2 2-2 1.11 0 2 .89 2 2h3c.55 0 1 .45 1 1v5h-1V6H1v9h10v-2zM2 5h8c0-.55-.45-1-1-1H8c-.55 0-1-.45-1-1s-.45-1-1-1-1 .45-1 1-.45 1-1 1H3c-.55 0-1 .45-1 1z"></path></svg>
                  </clipboard-copy>
                </div>
                <pre id="empty-setup-push-repo-echo" class="f5"><span class="user-select-contain">git remote add origin <span class="js-git-clone-help-text">https://github.com/arrudaricardo/test.git</span></span>
<span class="user-select-contain">git push -u origin master</span></pre>
              </div>
            </div>

            <div class="Box-row">
              <h3>…or import code from another repository</h3>
              <p>You can initialize this repository with code from a Subversion, Mercurial, or TFS project.</p>
              <a href="/arrudaricardo/test/import" class="btn btn-sm" data-ga-click="Empty repo, click, Clicked Import code">Import code</a>
            </div>
          </div>
                <pre id="empty-setup-new-repo-echo" class="f5"><span class="user-select-contain">echo "# test" &gt;&gt; README.md</span>

                    </div>) 
            } 
 
        </div>
    )
}

export default Respository;
// …or create a new repository on the command line
// echo "# test" >> README.md
// git init
// git add README.md
// git commit -m "first commit"
// git remote add origin https://github.com/arrudaricardo/test.git
// git push -u origin master
// …or push an existing repository from the command line
// git remote add origin https://github.com/arrudaricardo/test.git
// git push -u origin master
//TODO: delete button
